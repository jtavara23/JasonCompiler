/* Generated By:JavaCC: Do not edit this line. TesterConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TesterConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ARRAY = 1;
  /** RegularExpression Id. */
  int ENDWHILE = 2;
  /** RegularExpression Id. */
  int PROGRAM = 3;
  /** RegularExpression Id. */
  int BEGIN = 4;
  /** RegularExpression Id. */
  int FUNCTION = 5;
  /** RegularExpression Id. */
  int READ = 6;
  /** RegularExpression Id. */
  int THEN = 7;
  /** RegularExpression Id. */
  int CALL = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int REAL = 10;
  /** RegularExpression Id. */
  int TYPES = 11;
  /** RegularExpression Id. */
  int DO = 12;
  /** RegularExpression Id. */
  int INTEGER = 13;
  /** RegularExpression Id. */
  int RECORD = 14;
  /** RegularExpression Id. */
  int UNTIL = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int PARAMETERS = 17;
  /** RegularExpression Id. */
  int RETURN = 18;
  /** RegularExpression Id. */
  int VARIABLES = 19;
  /** RegularExpression Id. */
  int END = 20;
  /** RegularExpression Id. */
  int SET = 21;
  /** RegularExpression Id. */
  int WHILE = 22;
  /** RegularExpression Id. */
  int ENDIF = 23;
  /** RegularExpression Id. */
  int PROCEDURE = 24;
  /** RegularExpression Id. */
  int STRING = 25;
  /** RegularExpression Id. */
  int WRITE = 26;
  /** RegularExpression Id. */
  int ENDUNTIL = 27;
  /** RegularExpression Id. */
  int RETURNS = 28;
  /** RegularExpression Id. */
  int VAR = 29;
  /** RegularExpression Id. */
  int ADD = 30;
  /** RegularExpression Id. */
  int SUB = 31;
  /** RegularExpression Id. */
  int MULT = 32;
  /** RegularExpression Id. */
  int DIV = 33;
  /** RegularExpression Id. */
  int IGUAL = 34;
  /** RegularExpression Id. */
  int MENOR = 35;
  /** RegularExpression Id. */
  int MAIOR = 36;
  /** RegularExpression Id. */
  int DIFERENTE = 37;
  /** RegularExpression Id. */
  int MENORIGUAL = 38;
  /** RegularExpression Id. */
  int MAIORIGUAL = 39;
  /** RegularExpression Id. */
  int INTEIRO = 40;
  /** RegularExpression Id. */
  int FLOAT = 41;
  /** RegularExpression Id. */
  int DIGITO = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;
  /** RegularExpression Id. */
  int CADEIA = 44;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 45;
  /** RegularExpression Id. */
  int VIRGULA = 46;
  /** RegularExpression Id. */
  int ABREPAR = 47;
  /** RegularExpression Id. */
  int FECPAR = 48;
  /** RegularExpression Id. */
  int ABRECOL = 49;
  /** RegularExpression Id. */
  int FECHACOL = 50;
  /** RegularExpression Id. */
  int NAO = 51;
  /** RegularExpression Id. */
  int DOT = 52;
  /** RegularExpression Id. */
  int E = 53;
  /** RegularExpression Id. */
  int OU = 54;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ComentarioBloco = 1;
  /** Lexical state. */
  int ComentarioLinha = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"array\"",
    "\"endwhile\"",
    "\"program\"",
    "\"begin\"",
    "\"function\"",
    "\"read\"",
    "\"then\"",
    "\"call\"",
    "\"if\"",
    "\"real\"",
    "\"types\"",
    "\"do\"",
    "\"integer\"",
    "\"record\"",
    "\"until\"",
    "\"else\"",
    "\"parameters\"",
    "\"return\"",
    "\"variables\"",
    "\"end\"",
    "\"set\"",
    "\"while\"",
    "\"endif\"",
    "\"procedure\"",
    "\"string\"",
    "\"write\"",
    "\"enduntil\"",
    "\"returns\"",
    "\"var\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"!\"",
    "\"<=\"",
    "\">=\"",
    "<INTEIRO>",
    "<FLOAT>",
    "<DIGITO>",
    "<IDENTIFIER>",
    "<CADEIA>",
    "\";\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"~\"",
    "\".\"",
    "\"&\"",
    "\"\\\\\"",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"{\"",
    "\"}\"",
    "<token of kind 61>",
    "\"--\"",
    "\"\\n\"",
    "<token of kind 64>",
  };

}
